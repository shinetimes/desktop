{"version":3,"sources":["package.js"],"names":[],"mappings":"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","file":"package-compiled.js","sourcesContent":["/* eslint strict: 0, no-shadow: 0, no-unused-vars: 0, no-console: 0 */\n'use strict';\n\nrequire('babel-polyfill');\nconst os = require('os');\nconst webpack = require('webpack');\nconst electronCfg = require('./webpack.config.electron.js');\nconst cfg = require('./webpack.config.production.js');\nconst packager = require('electron-packager');\nconst del = require('del');\nconst exec = require('child_process').exec;\nconst argv = require('minimist')(process.argv.slice(2));\nconst pkg = require('./package.json');\nconst deps = Object.keys(pkg.dependencies);\nconst devDeps = Object.keys(pkg.devDependencies);\n\nconst appName = argv.name || argv.n || pkg.productName;\nconst shouldUseAsar = argv.asar || argv.a || false;\nconst shouldBuildAll = argv.all || false;\n\n\nconst DEFAULT_OPTS = {\n  dir: './',\n  name: appName,\n  asar: shouldUseAsar,\n  ignore: [\n    '^/test($|/)',\n    '^/tools($|/)',\n    '^/release($|/)',\n    '^/main.development.js'\n  ].concat(devDeps.map(name => `/node_modules/${name}($|/)`))\n    .concat(\n      deps.filter(name => !electronCfg.externals.includes(name))\n        .map(name => `/node_modules/${name}($|/)`)\n    )\n};\n\nconst icon = argv.icon || argv.i || 'app/app';\n\nif (icon) {\n  DEFAULT_OPTS.icon = icon;\n}\n\nconst version = argv.version || argv.v;\n\nif (version) {\n  DEFAULT_OPTS.version = version;\n  startPack();\n} else {\n  // use the same version as the currently-installed electron-prebuilt\n  exec('npm list electron-prebuilt --dev', (err, stdout) => {\n    if (err) {\n      DEFAULT_OPTS.version = '1.0.2';\n    } else {\n      DEFAULT_OPTS.version = stdout.split('electron-prebuilt@')[1].replace(/\\s/g, '');\n    }\n\n    startPack();\n  });\n}\n\n\nfunction build(cfg) {\n  return new Promise((resolve, reject) => {\n    webpack(cfg, (err, stats) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(stats);\n    });\n  });\n}\n\nfunction startPack() {\n  console.log('start pack...');\n  build(electronCfg)\n    .then(() => build(cfg))\n    .then(() => del('release'))\n    .then(paths => {\n      if (shouldBuildAll) {\n        // build for all platforms\n        const archs = ['ia32', 'x64'];\n        const platforms = ['linux', 'win32', 'darwin'];\n\n        platforms.forEach(plat => {\n          archs.forEach(arch => {\n            pack(plat, arch, log(plat, arch));\n          });\n        });\n      } else {\n        // build for current platform only\n        pack(os.platform(), os.arch(), log(os.platform(), os.arch()));\n      }\n    })\n    .catch(err => {\n      console.error(err);\n    });\n}\n\nfunction pack(plat, arch, cb) {\n  // there is no darwin ia32 electron\n  if (plat === 'darwin' && arch === 'ia32') {\n    return;\n  }\n\n  const iconObj = {\n    icon: DEFAULT_OPTS.icon + (() => {\n      let extension = '.png';\n\n      if (plat === 'darwin') {\n        extension = '.icns';\n      } else if (plat === 'win32') {\n        extension = '.ico';\n      }\n      return extension;\n    })()\n  };\n\n  const opts = Object.assign({}, DEFAULT_OPTS, iconObj, {\n    platform: plat,\n    arch,\n    prune: true,\n    'app-version': pkg.version || DEFAULT_OPTS.version,\n    out: `release/${plat}-${arch}`\n  });\n\n  packager(opts, cb);\n}\n\n\nfunction log(plat, arch) {\n  return (err, filepath) => {\n    if (err) {\n      return console.error(err);\n    }\n    console.log(`${plat}-${arch} finished!`);\n  };\n}\n"]}