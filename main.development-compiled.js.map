{"version":3,"sources":["main.development.js"],"names":[],"mappings":"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","file":"main.development-compiled.js","sourcesContent":["import {app, BrowserWindow, Menu, shell} from \"electron\";\n\nlet menu;\nlet template;\nlet mainWindow = null;\n\n\nif (process.env.NODE_ENV === 'development') {\n  require('electron-debug')(); // eslint-disable-line global-require\n}\n\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\n\napp.on('ready', () => {\n  mainWindow = new BrowserWindow({\n    show: false,\n    width: 1024,\n    height: 728\n  });\n\n  mainWindow.loadURL(`file://${__dirname}/app/app.html`);\n\n  mainWindow.webContents.on('did-finish-load', () => {\n    mainWindow.show();\n    mainWindow.focus();\n  });\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n\n  if (process.env.NODE_ENV === 'development') {\n    mainWindow.openDevTools();\n  }\n\n  if (process.platform === 'darwin') {\n    template = [{\n      label: 'Electron',\n      submenu: [{\n        label: 'About ElectronReact',\n        selector: 'orderFrontStandardAboutPanel:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Services',\n        submenu: []\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Hide ElectronReact',\n        accelerator: 'Command+H',\n        selector: 'hide:'\n      }, {\n        label: 'Hide Others',\n        accelerator: 'Command+Shift+H',\n        selector: 'hideOtherApplications:'\n      }, {\n        label: 'Show All',\n        selector: 'unhideAllApplications:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Quit',\n        accelerator: 'Command+Q',\n        click() {\n          app.quit();\n        }\n      }]\n    }, {\n      label: 'Edit',\n      submenu: [{\n        label: 'Undo',\n        accelerator: 'Command+Z',\n        selector: 'undo:'\n      }, {\n        label: 'Redo',\n        accelerator: 'Shift+Command+Z',\n        selector: 'redo:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Cut',\n        accelerator: 'Command+X',\n        selector: 'cut:'\n      }, {\n        label: 'Copy',\n        accelerator: 'Command+C',\n        selector: 'copy:'\n      }, {\n        label: 'Paste',\n        accelerator: 'Command+V',\n        selector: 'paste:'\n      }, {\n        label: 'Select All',\n        accelerator: 'Command+A',\n        selector: 'selectAll:'\n      }]\n    }, {\n      label: 'View',\n      submenu: process.env.NODE_ENV === 'development' ? [{\n        label: 'Reload',\n        accelerator: 'Command+R',\n        click() {\n          mainWindow.webContents.reload();\n        }\n      }, {\n        label: 'Toggle Full Screen',\n        accelerator: 'Ctrl+Command+F',\n        click() {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen());\n        }\n      }, {\n        label: 'Toggle Developer Tools',\n        accelerator: 'Alt+Command+I',\n        click() {\n          mainWindow.toggleDevTools();\n        }\n      }] : [{\n        label: 'Toggle Full Screen',\n        accelerator: 'Ctrl+Command+F',\n        click() {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen());\n        }\n      }]\n    }, {\n      label: 'Window',\n      submenu: [{\n        label: 'Minimize',\n        accelerator: 'Command+M',\n        selector: 'performMiniaturize:'\n      }, {\n        label: 'Close',\n        accelerator: 'Command+W',\n        selector: 'performClose:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Bring All to Front',\n        selector: 'arrangeInFront:'\n      }]\n    }, {\n      label: 'Help',\n      submenu: [{\n        label: 'Learn More',\n        click() {\n          shell.openExternal('http://electron.atom.io');\n        }\n      }, {\n        label: 'Documentation',\n        click() {\n          shell.openExternal('https://github.com/atom/electron/tree/master/docs#readme');\n        }\n      }, {\n        label: 'Community Discussions',\n        click() {\n          shell.openExternal('https://discuss.atom.io/c/electron');\n        }\n      }, {\n        label: 'Search Issues',\n        click() {\n          shell.openExternal('https://github.com/atom/electron/issues');\n        }\n      }]\n    }];\n\n    menu = Menu.buildFromTemplate(template);\n    Menu.setApplicationMenu(menu);\n  } else {\n    template = [{\n      label: '&File',\n      submenu: [{\n        label: '&Open',\n        accelerator: 'Ctrl+O'\n      }, {\n        label: '&Close',\n        accelerator: 'Ctrl+W',\n        click() {\n          mainWindow.close();\n        }\n      }]\n    }, {\n      label: '&View',\n      submenu: process.env.NODE_ENV === 'development' ? [{\n        label: '&Reload',\n        accelerator: 'Ctrl+R',\n        click() {\n          mainWindow.webContents.reload();\n        }\n      }, {\n        label: 'Toggle &Full Screen',\n        accelerator: 'F11',\n        click() {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen());\n        }\n      }, {\n        label: 'Toggle &Developer Tools',\n        accelerator: 'Alt+Ctrl+I',\n        click() {\n          mainWindow.toggleDevTools();\n        }\n      }] : [{\n        label: 'Toggle &Full Screen',\n        accelerator: 'F11',\n        click() {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen());\n        }\n      }]\n    }, {\n      label: 'Help',\n      submenu: [{\n        label: 'Learn More',\n        click() {\n          shell.openExternal('http://electron.atom.io');\n        }\n      }, {\n        label: 'Documentation',\n        click() {\n          shell.openExternal('https://github.com/atom/electron/tree/master/docs#readme');\n        }\n      }, {\n        label: 'Community Discussions',\n        click() {\n          shell.openExternal('https://discuss.atom.io/c/electron');\n        }\n      }, {\n        label: 'Search Issues',\n        click() {\n          shell.openExternal('https://github.com/atom/electron/issues');\n        }\n      }]\n    }];\n    menu = Menu.buildFromTemplate(template);\n    mainWindow.setMenu(menu);\n  }\n});\n"]}